<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
    <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
    <context:component-scan base-package="com.baobaotao.dao"/>
    <context:component-scan base-package="com.baobaotao.service"/>
    
    <!--  bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:fileEncoding="utf-8">
		<property name="locations"> 
			<list>
				<value>classpath:jdbc.properties</value>
			</list> 
		</property> 
	</bean -->
	
	<context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="${driverClassName}"
		p:url="${url}" 
		p:username="${userName}"
		p:password="${password}" />
		
	<bean id="nativeJdbcExtractor" lazy-init="true" 
		class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"/>
		
	<bean id="namedParamJdbcTemplate" 
	      class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
	      <constructor-arg ref="dataSource"/>
	      
	</bean>
	<!-- 配置Jdbc模板  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" 
		p:nativeJdbcExtractor-ref="nativeJdbcExtractor"/>
		
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true" />
		
	<bean id="sender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl"
		p:host="smtp.163.com"
		p:username="bahaidong"
		p:password="165132298vs">
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="freeMarkerConfigurer"
		  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"
		  p:templateLoaderPath="classpath:mailTemplate/">
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">1800</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>		
	
	<bean id="taskExecutor" 
	      class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
	      p:corePoolSize="10"
	      p:maxPoolSize="30"/>	
		
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
	<bean id="incre"
		class="org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer"
		p:incrementerName="t_post_id"
		p:columnName="sequence_id"
		p:cacheSize="10"
		p:dataSource-ref="dataSource"/>
		
	<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression=" execution(* com.baobaotao.service..*(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
</beans>
